These are the tests that cover the different components of the compiler.
They are self-contained and they cover many different cases (some up to 50).

-RecDescent/src/tests/test_grammar_dalang.cpp
Checks that the grammar has no left recursion or ambiguities.

-RecDescent/src/tests/test_errors_parser.cpp
Checks different scenarios of parsing/semantics message errors.

-RecDescent/src/tests/test_parser.cpp
Checks parsing, AST construction, scopes and variable declarations.

-RecDescent/src/tests/test_ir_generator.cpp
Checks IR generation

-RecDescent/src/tests/test_backend_davm.cpp
Checks the backend generator for test_backend_davm


These tests take input files, and as such also comprise a set of
input tests

-RecDescent/src/tests/test_parser_compiler_davm.cpp
Given a source file produces bytecode for DAVM. This is the most complete form
of verification as it involves the whole pipeline. After being compiled,
bytecode files are executed. High-level constraints can be asserted
from the language and checked at the end of the execution, and as such make
more convenient to test functionalities.

In the folder "RecDescent/src/tests/verification_davm" each of the individual
test can be found: its input language, compiler output and virtual machine
execution output.
