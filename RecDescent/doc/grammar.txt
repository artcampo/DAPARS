Terminals are written in lowercase and non-terminals in uppercase.

---------------------------------------------
conditional flow
Prog    := P_INIT DEFL P_END
P_INIT  := empty
P_END   := empty

DEFL    := FDEF DEFL
        |  CDEF DEFL
        |  empty

FDEF    := TYPE name ( PARL ){ STMTS }

---------------------------------------------

CDEF    := class name INHT_LIST { MEMBER_LIST }

MEMBER_LIST := TYPE NAME MEMBER MEMBER_LIST
            |  empty

MEMBER  := ;
        |  ( ARGL ) { STMTS }

INHT_LIST := : ntype INHT_LIST'
          |  empty
INHT_LIST':= , ntype INHT_LIST'
          |  empty

---------------------------------------------

PARL    := empty
        |  PAR PARL'

PARL'   := empty
        |  PAR PARL'

PAR     := TYPE name

---------------------------------------------

STMTS   := STMT STMTS
        |  empty
STMT    := if(E){STMTS} IFELSE
        |  while(E){STMTS}
        |  DECL;
        |  E = E;

IFELSE:= else{STMTS}
      |  empty

---------------------------------------------

Expr    := AndExpr Expr'
Expr'   := or AndExpr Expr'
        |  empty
AndExpr := RelExpr AndExpr'
AndExpr':= and RelExpr AndExpr'
        |  empty
RelExpr := NumExpr RelExpr'
RelExpr':= < NumExpr RelExpr'
        |  empty
NE    := T NE'
NE'   := + T NE'
      |  empty
T     := F
F     := *F'
      |  &F'
      |  F'
F'    := ( E )
      |  numerical
      |  true
      |  false
      |  name ARGM

---------------------------------------------

ARGM  := empty
      | ( ARGL )
      | . name ARGM

ARGL  := empty
      | EXPR ARGL'

ARGL' := empty
      | , EXPR ARGL'

---------------------------------------------

DECL  := TYPE NAME_LIST

TYPE  := int   TYPE'
      |  bool  TYPE'
      |  void  TYPE'
      |  ntype TYPE'

TYPE' := *
      |  empty


NAME_LIST := name NAME_LIST'

NAME_LIST':= , name NAME_LIST'
          | empty

