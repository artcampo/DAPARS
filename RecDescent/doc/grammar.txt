conditional flow
Prog    := P_INIT DEFL P_END
P_INIT  := empty
P_END   := empty

DEFL    := FDEF DEFL
        |  CDEF DEFL
        |  empty

FDEF    := TYPE name ( PARL ){ STMTS }

CDEF    := Class name{}

PARL    := empty
        |  PAR PARL'

PARL'   := empty
        |  PAR PARL'

PAR     := TYPE name

STMTS   := STMT STMTS
        |  empty
STMT    := if(E){STMTS} IFELSE
        |  while(E){STMTS}
        |  DECL;
        |  E = E;

IFELSE:= else{STMTS}
      |  empty

E     := T E'
E'    := + T E'
      |  empty
T     := F
F     := *F'
      |  @F'
      |  F'
F'    := ( E )
      |  numerical
      |  true
      |  false
      |  name ARGM

ARGM  := empty
      | ( ARGL )

ARGL  := empty
      | EXPR ARGL'

ARGL' := empty
      | , EXPR ARGL'


DECL  := TYPE NAME_LIST

TYPE  := int  TYPE'
      |  bool TYPE'
      |  void TYPE'

TYPE' := *
      |  empty


NAME_LIST := name NAME_LIST'

NAME_LIST':= , name NAME_LIST'
          | empty

