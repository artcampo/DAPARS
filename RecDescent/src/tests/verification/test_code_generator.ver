Grammar:
PROG -> E  init 
E -> T E' 
E' -> + T E' 
E' -> - T E' 
E' -> {empty} 
T -> F T' 
T' -> * F T' 
T' -> / F T' 
T' -> {empty} 
F -> ( E ) 
F -> {num} 
F -> {nam} 

---------------------------------------------------
Parsing: "main(){int a,b,c; while(true){b=2+3;} c=3+4; }"
[err:33] function must start with return type at: "main" -> "(){int a,b,c; while(true){b=2+3;} c=3+4; }"
AST not build at: "main" -> "(){int a,b,c; while(true){b=2+3;} c=3+4; }"

---------------------------------------------------
Parsing: "main(){ int a, b; if(true){int c; a=2+3;} else{ int d, e,f; d = 4; } int g; b=5+6; }"
[err:33] function must start with return type at: "main" -> "(){ int a, b; if(true){int c; a=2+3;} else{ int d, e,f; d = 4; } int g; b=5+6; }"
AST not build at: "main" -> "(){ int a, b; if(true){int c; a=2+3;} else{ int d, e,f; d = 4; } int g; b=5+6; }"

---------------------------------------------------
Parsing: "main(){int a,b; int* p; a=*p; b=2; p = &b; a = b + *p;}"
[err:33] function must start with return type at: "main" -> "(){int a,b; int* p; a=*p; b=2; p = &b; a = b + *p;}"
AST not build at: "main" -> "(){int a,b; int* p; a=*p; b=2; p = &b; a = b + *p;}"

---------------------------------------------------
Parsing: "main(){int a; a= 2;} f(){int a; a=3;}"
[err:33] function must start with return type at: "main" -> "(){int a; a= 2;} f(){int a; a=3;}"
AST not build at: "main" -> "(){int a; a= 2;} f(){int a; a=3;}"

