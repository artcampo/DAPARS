Grammar:
PROG -> E  init 
E -> T E' 
E' -> + T E' 
E' -> - T E' 
E' -> {empty} 
T -> F T' 
T' -> * F T' 
T' -> / F T' 
T' -> {empty} 
F -> ( E ) 
F -> {num} 
F -> {nam} 

---------------------------------------------------
Parsing: "(1);"
Print AST
1

---------------------------------------------------
Parsing: "2+3+4;"
Print AST
( ( 2 + 3 ) + 4 )


---------------------------------------------------
Parsing: "2++3+4;"

Expecting lpar. at: "2++"
Program syntactically incorrect
Print AST
( ( 2 + 3 ) + 4 )


---------------------------------------------------
Parsing: "1+2;3+4;"
Print AST
( 1 + 2 )
( 3 + 4 )


Grammar:
PROG -> E  init 
E -> T E' 
E' -> + T E' 
E' -> - T E' 
E' -> {empty} 
T -> F T' 
T' -> * F T' 
T' -> / F T' 
T' -> {empty} 
F -> ( E ) 
F -> {num} 
F -> {nam} 

---------------------------------------------------
Parsing: "1; if(2){3;}"
Print AST
1
if(2){
  3
  }
  
---------------------------------------------------
Parsing: "1; if(2){3+4+5;}"
Print AST
1
if(2){
  ( ( 3 + 4 ) + 5 )
  }
  
---------------------------------------------------
Parsing: "1; if(2){if(3){4;if(5){6;}}}"
Print AST
1
if(2){
  if(3){
    4
    if(5){
      6
      }
    }
  }
  
---------------------------------------------------
Parsing: "1; if(2){if(3){4+5;if(6){7+8;}}}"
Print AST
1
if(2){
  if(3){
    ( 4 + 5 )
    if(6){
      ( 7 + 8 )
      }
    }
  }
  
