Grammar:
PROG -> E  init 
E -> T E' 
E' -> + T E' 
E' -> - T E' 
E' -> {empty} 
T -> F T' 
T' -> * F T' 
T' -> / F T' 
T' -> {empty} 
F -> ( E ) 
F -> {num} 
F -> {nam} 

---------------------------------------------------
Parsing: "(1);"
[err:] assignment missing '=' at: "(1);" -> ""
[err:3] Block not finishing in eof or rcbr at: "(1);" -> ""

---------------------------------------------------
Parsing: "1;2;3;"
[err:] assignment missing '=' at: "1;" -> "2;3;"
[err:3] Block not finishing in eof or rcbr at: "1;" -> "2;3;"

---------------------------------------------------
Parsing: "2+3+4;"
[err:] assignment missing '=' at: "2+3+4;" -> ""
[err:3] Block not finishing in eof or rcbr at: "2+3+4;" -> ""


---------------------------------------------------
Parsing: "2++3+4;"
Expecting numerical or lpar at: "2++" -> "3+4;"
[err:12] operand to + missing at: "2++3+4;" -> ""
[err:12] operand to + missing at: "2++3+4;" -> ""
[err:12] operand to + missing at: "2++3+4;" -> ""
[err:] assignment missing '=' at: "2++3+4;" -> ""
[err:3] Block not finishing in eof or rcbr at: "2++3+4;" -> ""


---------------------------------------------------
Parsing: "1+2;3+4;"
[err:] assignment missing '=' at: "1+2;" -> "3+4;"
[err:3] Block not finishing in eof or rcbr at: "1+2;" -> "3+4;"


---------------------------------------------------
Parsing: "1+2;3+4;5+6;"
[err:] assignment missing '=' at: "1+2;" -> "3+4;5+6;"
[err:3] Block not finishing in eof or rcbr at: "1+2;" -> "3+4;5+6;"


Grammar:
PROG -> E  init 
E -> T E' 
E' -> + T E' 
E' -> - T E' 
E' -> {empty} 
T -> F T' 
T' -> * F T' 
T' -> / F T' 
T' -> {empty} 
F -> ( E ) 
F -> {num} 
F -> {nam} 

---------------------------------------------------
Parsing: "1; if(2){3;}"
[err:] assignment missing '=' at: "1;" -> " if(2){3;}"
[err:3] Block not finishing in eof or rcbr at: "1;" -> " if(2){3;}"

---------------------------------------------------
Parsing: "1; if(2){3;} 4;"
[err:] assignment missing '=' at: "1;" -> " if(2){3;} 4;"
[err:3] Block not finishing in eof or rcbr at: "1;" -> " if(2){3;} 4;"

---------------------------------------------------
Parsing: "1; if(2){3+4+5;}"
[err:] assignment missing '=' at: "1;" -> " if(2){3+4+5;}"
[err:3] Block not finishing in eof or rcbr at: "1;" -> " if(2){3+4+5;}"

---------------------------------------------------
Parsing: "1; if(2){3+4+5;} 6;"
[err:] assignment missing '=' at: "1;" -> " if(2){3+4+5;} 6;"
[err:3] Block not finishing in eof or rcbr at: "1;" -> " if(2){3+4+5;} 6;"

---------------------------------------------------
Parsing: "1; if(2){if(3){4;if(5){6;}}}"
[err:] assignment missing '=' at: "1;" -> " if(2){if(3){4;if(5){6;}}}"
[err:3] Block not finishing in eof or rcbr at: "1;" -> " if(2){if(3){4;if(5){6;}}}"

---------------------------------------------------
Parsing: "1; if(2){if(3){4+5;if(6){7+8;}}}"
[err:] assignment missing '=' at: "1;" -> " if(2){if(3){4+5;if(6){7+8;}}}"
[err:3] Block not finishing in eof or rcbr at: "1;" -> " if(2){if(3){4+5;if(6){7+8;}}}"

---------------------------------------------------
Parsing: "1; if(2){3;}else{4;}"
[err:] assignment missing '=' at: "1;" -> " if(2){3;}else{4;}"
[err:3] Block not finishing in eof or rcbr at: "1;" -> " if(2){3;}else{4;}"

---------------------------------------------------
Parsing: "1; if(2){3;}if(4){5;}else{6;}"
[err:] assignment missing '=' at: "1;" -> " if(2){3;}if(4){5;}else{6;}"
[err:3] Block not finishing in eof or rcbr at: "1;" -> " if(2){3;}if(4){5;}else{6;}"

---------------------------------------------------
Parsing: "int a; int b; bool c;"

AST pretty:
int a 
int b 
bool c 

AST dump:
int a 
int b 
bool c 

---------------------------------------------------
Parsing: "int b c d; bool e f;"

AST pretty:
int b int c int d 
bool e bool f 

AST dump:
int b int c int d 
bool e bool f 

---------------------------------------------------
Parsing: "int a; a=1;"

AST pretty:
int a 
a=1

AST dump:
int a 
Assign
-a
-Literal: 1

---------------------------------------------------
Parsing: "int a; a=(1+2+3);"

AST pretty:
int a 
a=( ( 1 + 2 ) + 3 )

AST dump:
int a 
Assign
-a
-Op: + 
--Op: + 
---Literal: 1
---Literal: 2
--Literal: 3

---------------------------------------------------
Parsing: "int a b c; b=1; c=2; a=(1+b+c);"

AST pretty:
int a int b int c 
b=1
c=2
a=( ( 1 + b ) + c )

AST dump:
int a int b int c 
Assign
-b
-Literal: 1
Assign
-c
-Literal: 2
Assign
-a
-Op: + 
--Op: + 
---Literal: 1
---b
--c

---------------------------------------------------
Parsing: "int a; int b; int a;"

AST pretty:
int a 
int b 
int a 

AST dump:
int a 
int b 
int a 

