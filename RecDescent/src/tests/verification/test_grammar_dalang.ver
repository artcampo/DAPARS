KEYWORD EXTRA INFO NOT IMPLEMENTED
KEYWORD EXTRA INFO NOT IMPLEMENTED
KEYWORD EXTRA INFO NOT IMPLEMENTED
KEYWORD EXTRA INFO NOT IMPLEMENTED
KEYWORD EXTRA INFO NOT IMPLEMENTED
KEYWORD EXTRA INFO NOT IMPLEMENTED
KEYWORD EXTRA INFO NOT IMPLEMENTED
Dalang grammar v0.3
Grammar:
PROG -> FDECL  init 
FDECL -> {nam} ( ) { STMTS } 
STMTS -> STMT STMTS 
STMTS -> {empty} 
STMT -> E = E ; 
STMT -> DECL ; 
STMT -> if ( E ) { STMTS } IFELSE 
STMT -> while ( E ) { STMTS } 
IFELSE -> else { STMTS } 
IFELSE -> {empty} 
DECL -> TYPE NAME_LIST 
TYPE -> int TYPE' 
TYPE -> bool TYPE' 
TYPE' -> * 
TYPE' -> {empty} 
NAME_LIST -> {nam} NAME_LIST' 
NAME_LIST' -> , {nam} NAME_LIST' 
NAME_LIST' -> {empty} 
E -> T E' 
E' -> + T E' 
E' -> {empty} 
T -> F 
F -> & F' 
F -> * F' 
F -> F' 
F' -> ( E ) 
F' -> {num} 
F' -> {nam} 
F' ->  true 
F' -> false 

-----------------------------
First Table
DECL => bool int 
E => & * false ( {nam} {num}  true 
E' => {empty} + 
F => & * false ( {nam} {num}  true 
F' => false ( {nam} {num}  true 
FDECL => {nam} 
IFELSE => else {empty} 
NAME_LIST => {nam} 
NAME_LIST' => , {empty} 
PROG => {nam} 
STMT => & * bool false if int ( {nam} {num}  true while 
STMTS => & * bool {empty} false if int ( {nam} {num}  true while 
T => & * false ( {nam} {num}  true 
TYPE => bool int 
TYPE' => * {empty} 
-----------------------------
Follow Table
DECL => ; 
E => = ) ; 
E' => = ) ; 
F => = + ) ; 
F' => = + ) ; 
FDECL => {eof} 
IFELSE => & * bool false if int ( {nam} {num} }  true while 
NAME_LIST => ; 
NAME_LIST' => ; 
PROG => {eof} 
STMT => & * bool false if int ( {nam} {num} }  true while 
STMTS => } 
T => = + ) ; 
TYPE => {nam} 
TYPE' => {nam} 
-----------------------------
First+ Table
DECL -> TYPE NAME_LIST  => bool int 
E -> T E'  => & * false ( {nam} {num}  true 
E' -> {empty}  => {empty} = ) ; 
E' -> + T E'  => + 
F -> & F'  => & 
F -> * F'  => * 
F -> F'  => false ( {nam} {num}  true 
F' -> false  => false 
F' -> ( E )  => ( 
F' -> {nam}  => {nam} 
F' -> {num}  => {num} 
F' ->  true  =>  true 
FDECL -> {nam} ( ) { STMTS }  => {nam} 
IFELSE -> else { STMTS }  => else 
IFELSE -> {empty}  => & * bool {empty} false if int ( {nam} {num} }  true while 
NAME_LIST -> {nam} NAME_LIST'  => {nam} 
NAME_LIST' -> , {nam} NAME_LIST'  => , 
NAME_LIST' -> {empty}  => {empty} ; 
PROG -> FDECL  init  => {nam} 
STMT -> DECL ;  => bool int 
STMT -> E = E ;  => & * false ( {nam} {num}  true 
STMT -> if ( E ) { STMTS } IFELSE  => if 
STMT -> while ( E ) { STMTS }  => while 
STMTS -> {empty}  => {empty} } 
STMTS -> STMT STMTS  => & * bool false if int ( {nam} {num}  true while 
T -> F  => & * false ( {nam} {num}  true 
TYPE -> bool TYPE'  => bool 
TYPE -> int TYPE'  => int 
TYPE' -> *  => * 
TYPE' -> {empty}  => {empty} {nam} 
-----------------------------
Is backtrack free: 0
